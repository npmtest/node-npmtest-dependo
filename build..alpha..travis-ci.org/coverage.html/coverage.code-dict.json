{"/home/travis/build/npmtest/node-npmtest-dependo/test.js":"/* istanbul instrument in package npmtest_dependo */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-dependo/lib.npmtest_dependo.js":"/* istanbul instrument in package npmtest_dependo */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_dependo = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_dependo = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-dependo/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-dependo && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_dependo */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_dependo\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_dependo.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_dependo.rollup.js'] =\n            local.assetsDict['/assets.npmtest_dependo.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_dependo.__dirname + '/lib.npmtest_dependo.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-dependo/node_modules/dependo/lib/dependo.js":"'use strict';\n\nvar madge = require('madge');\nvar sha1 = require('sha-1');\n\nfunction Dependo(targetPath, options) {\n\n    this.config = options || {};\n    this.config.format = String(options.format || 'amd').toLowerCase();\n    this.config.exclude = options.exclude || null;\n    this.identification = sha1(targetPath + JSON.stringify(this.config)) || ~~(Math.random()*999999999);\n    this.title = options.title || 'dependo';\n    \n    if (this.config.format==='json') {\n        this.dependencies = this.config.directDeps;\n    } else {\n        this.dependencies = madge(targetPath, this.config).tree;\n    }\n\n    if (this.config.transform && typeof (this.config.transform) == 'function') {\n        this.dependencies = this.config.transform(this.dependencies);\n    }\n\n}\n\nDependo.prototype.generateHtml = function () {\n    return require('./html').output(this.dependencies, this.identification, this.title);\n};\n\nmodule.exports = Dependo;\n","/home/travis/build/npmtest/node-npmtest-dependo/node_modules/dependo/lib/converse.js":"var _ = require('underscore')._;\n\nfunction converse (tree) {\n  var converse = {};\n  _.each(tree, function (targets, source) {\n    return _.each(targets, function (t) {\n      if (!converse[t]) {\n        return converse[t] = [source];\n      } else {\n        return converse[t].unshift(source);\n      }\n    });\n  });\n  return converse;\n};\n\nif (typeof exports == 'object' && exports === this) {\n  module.exports = converse;\n}\n","/home/travis/build/npmtest/node-npmtest-dependo/node_modules/dependo/lib/html.js":"'use strict';\n\nvar _ = require('underscore')._;\nvar fs = require('fs');\n\nfunction generateGraphData(dependencies) {\n\n    // Read data\n    var components = _.uniq(_.flatten(_.map(dependencies, function(values, item) {\n        var data = [];\n        data.push(item);\n        data = data.concat(values);\n\n        return data;\n    })));\n\n    // Mapped nodes\n    var nodes = _.map(components, function(component) {\n        return {\n            id: component\n        }\n    });\n\n    // Figure out links\n    var links = [];\n\n    _.each(dependencies, function(outerDependency, component, index) {\n\n        _.each(outerDependency, function(dependency) {\n\n            var sourceIndex = _.indexOf(components, dependency);\n            var targetIndex = _.indexOf(components, component);\n\n            var link = {\n                source: _.indexOf(components, component),\n                target: _.indexOf(components, dependency),\n            };\n\n            if (sourceIndex > -1 && targetIndex > -1) {\n                links.push(link);\n            }\n\n        })\n\n    });\n\n    return {\n        \"directed\": true,\n        \"multigraph\": false,\n        \"graph\": [],\n        \"nodes\": nodes,\n        \"links\": links\n    }\n\n};\n\nfunction generateHtml(graphData, identification, title) {\n\n    var templatePath = fs.readFileSync(__dirname + '/html/template.html', 'utf8');\n    var css = fs.readFileSync(__dirname + '/html/style.css', 'utf8');\n    var js = fs.readFileSync(__dirname + '/html/d3-graph.js', 'utf8');\n\n    var data = {\n        css: css,\n        js: js,\n        title: title,\n        graphData: JSON.stringify(graphData, null),\n        graphID: identification\n    };\n\n    return _.template(templatePath)(data);\n}\n\n\nmodule.exports.output = function(dependencies, identification, title) {\n\n    var graphData = generateGraphData(dependencies);\n    return generateHtml(graphData, identification, title);\n\n};\n","/home/travis/build/npmtest/node-npmtest-dependo/node_modules/dependo/lib/version.js":"module.exports = require('../package.json').version;","/home/travis/build/npmtest/node-npmtest-dependo/node_modules/dependo/lib/html/d3-graph.js":"(function() {\n\n  var url = 'data.json'\n  var r = 10;\n  var graph, layout, zoom, nodes, links, data;\n  var linkedByIndex = {};\n  var graphWidth, graphHeight;\n\n  // Helpers\n  function formatClassName(prefix, object) {\n    return prefix + '-' + object.id.replace(/(\\.|\\/)/gi, '-');\n  }\n\n  function findElementByNode(prefix, node) {\n    var selector = '.'+formatClassName(prefix, node);\n    return graph.select(selector);\n  }\n\n  function isConnected(a, b) {\n    return linkedByIndex[a.index + \",\" + b.index] || linkedByIndex[b.index + \",\" + a.index] || a.index == b.index;\n  }\n\n  function fadeRelatedNodes(d, opacity, nodes, links) {\n\n    // Clean\n    $('path.link').removeAttr('data-show');\n\n    nodes.style(\"stroke-opacity\", function(o) {\n        var thisOpacity;\n\n      if (isConnected(d, o)) {\n        thisOpacity = 1;\n      } else {\n        thisOpacity = opacity;\n      }\n\n      this.setAttribute('fill-opacity', thisOpacity);\n      this.setAttribute('stroke-opacity', thisOpacity);\n\n      if(thisOpacity == 1) {\n        this.classList.remove('dimmed');\n      } else {\n        this.classList.add('dimmed');\n      }\n\n      return thisOpacity;\n    });\n\n    links.style(\"stroke-opacity\", function(o) {\n\n      if (o.source === d) {\n\n        // Highlight target/sources of the link\n        var elmNodes = graph.selectAll('.'+formatClassName('node', o.target));\n        elmNodes.attr('fill-opacity', 1);\n        elmNodes.attr('stroke-opacity', 1);\n\n        elmNodes.classed('dimmed', false);\n\n        // Highlight arrows\n        var elmCurrentLink = $('path.link[data-source=' + o.source.index + ']');\n        elmCurrentLink.attr('data-show', true);\n        elmCurrentLink.attr('marker-end', 'url(#regular)');\n\n        return 1;\n\n      } else {\n\n        var elmAllLinks = $('path.link:not([data-show])');\n\n        if(opacity == 1) {\n          elmAllLinks.attr('marker-end', 'url(#regular)');\n        } else {\n          elmAllLinks.attr('marker-end', '');\n        }\n\n        return opacity;\n      }\n\n    });\n  }\n\n\n  function render() {\n\n    zoom = d3.behavior.zoom();\n    zoom.on(\"zoom\", onZoomChanged);\n\n    // Setup layout\n    layout = d3.layout.force()\n      .gravity(.05)\n      .charge(-300)\n      .linkDistance(100);\n\n    // Setup graph\n    graph = d3.select(\".graph\")\n      .append(\"svg:svg\")\n      .attr(\"pointer-events\", \"all\")\n      .call(zoom)\n      .append('svg:g')\n        .attr('width', graphWidth)\n        .attr('height', graphHeight);\n\n    d3.select(window).on(\"resize\", resize);\n\n    // Load graph data\n    var graphData = window.getGraphData();\n    // Load node placement\n    var storedNodes = getNodes();\n    graphData.nodes = graphData.nodes.map(function(n){\n      if(storedNodes[n.id]){\n        return storedNodes[n.id];\n      } else {\n        return n;\n      }\n    })\n    \n    renderGraph(graphData);\n\n    data = graphData;\n\n    // Resize\n    resize();\n\n    centerGraph();\n\n    // Controlers\n    $('.control-zoom a').on('click', onControlZoomClicked);\n  }\n\n  function resize() {\n    graphWidth = window.innerWidth,\n    graphHeight = window.innerHeight;\n    graph.attr(\"width\", graphWidth)\n         .attr(\"height\", graphHeight);\n\n    layout.size([graphWidth, graphHeight])\n          .resume();\n  }\n\n  function centerGraph() {\n\n    var centerTranslate = [\n      (graphWidth / 2) - (graphWidth * 0.2 / 2),\n      (graphHeight / 2) - (graphHeight * 0.2 / 2),\n    ];\n\n    zoom.translate(centerTranslate);\n\n    // Render transition\n    graph.transition()\n      .duration(500)\n      .attr(\"transform\", \"translate(\" + zoom.translate() + \")\" + \" scale(\" + zoom.scale() + \")\");\n  }\n\n  function renderGraph(data) {\n    // Markers\n    graph.append(\"svg:defs\").selectAll(\"marker\")\n        .data(['regular'])\n      .enter().append(\"svg:marker\")\n        .attr(\"id\", String)\n        .attr(\"viewBox\", \"0 -5 10 10\")\n        .attr(\"refX\", 15)\n        .attr(\"refY\", -1.5)\n        .attr(\"markerWidth\", 6)\n        .attr(\"markerHeight\", 6)\n        .attr(\"orient\", \"auto\")\n      .append(\"svg:path\")\n        .attr(\"d\", \"M0,-5L10,0L0,5\");\n\n    // Lines\n    links = graph.append('svg:g').selectAll(\"line\")\n      .data(data.links)\n      .enter().append(\"svg:path\")\n      .attr('class', 'link')\n      .attr(\"data-target\", function(o) { return o.target })\n      .attr(\"data-source\", function(o) { return o.source })\n      .attr(\"marker-end\", function(d) { return \"url(#regular)\"; });\n    // Nodes\n    nodes = graph.append('svg:g').selectAll(\"node\")\n      .data(data.nodes)\n      .enter().append(\"svg:g\")\n      .attr(\"class\",\"node\")\n      .call(layout.drag)\n      .on(\"mousedown\", onNodeMouseDown);    \n\n      // Circles\n      nodes.attr(\"class\", function(d) { return formatClassName('node', d) })\n      nodes.append(\"svg:circle\")\n        .attr(\"class\", function(d) { return formatClassName('circle', d) })\n        .attr(\"r\", 6)\n        .on(\"mouseover\", onNodeMouseOver.bind(this, nodes, links) )\n        .on(\"mouseout\", onNodeMouseOut.bind(this, nodes, links) );\n\n\n      // A copy of the text with a thick white stroke for legibility.\n      nodes.append(\"svg:text\")\n          .attr(\"x\", 15)\n          .attr(\"y\", \".31em\")\n          .attr(\"class\", function(d) { return 'shadow ' + formatClassName('text', d) })\n          .text(function(d) { return d.id; });\n\n      nodes.append(\"svg:text\")\n          .attr(\"class\", function(d) { return formatClassName('text', d) })\n          .attr(\"x\", 15)\n          .attr(\"y\", \".31em\")\n          .text(function(d) { return d.id; });\n\n    // Build linked index\n    data.links.forEach(function(d) {\n      linkedByIndex[d.source.index + \",\" + d.target.index] = 1;\n    });\n\n    // Draw the\n    layout.nodes(data.nodes);\n    layout.links(data.links);\n    layout.on(\"tick\", onTick);\n    layout.start();\n\n    zoom.scale(0.4);\n\n    // Render transition\n    graph.transition()\n      .duration(500)\n      .attr(\"transform\", \"scale(\" + zoom.scale() + \")\");\n\n  }\n\n  function onNodeMouseOver(nodes, links, d) {\n\n    // Highlight circle\n    var elm = findElementByNode('circle', d);\n    elm.style(\"fill\", '#b94431');\n\n    // Highlight related nodes\n    fadeRelatedNodes(d, .05, nodes, links);\n  }\n\n  function onNodeMouseOut(nodes, links, d) {\n\n    // Highlight circle\n    var elm = findElementByNode('circle', d);\n    elm.style(\"fill\", '#ccc');\n\n    // Highlight related nodes\n    fadeRelatedNodes(d, 1, nodes, links);\n    debouncedPersist();\n  }\n\n  function onTick(e) {\n\n    links.attr(\"d\", function(d) {\n      var dx = d.target.x - d.source.x,\n          dy = d.target.y - d.source.y,\n          dr = Math.sqrt(dx * dx + dy * dy);\n      return \"M\" + d.source.x + \",\" + d.source.y + \"A\" + dr + \",\" + dr + \" 0 0,1 \" + d.target.x + \",\" + d.target.y;\n    });\n\n    nodes.attr(\"cx\", function(d) { return d.x; })\n         .attr(\"cy\", function(d) { return d.y; })\n         .attr(\"transform\", function(d) { return \"translate(\" + d.x + \",\" + d.y + \")\"; });\n  }\n\n  function onControlZoomClicked(e) {\n    var elmTarget = $(this)\n    var scaleProcentile = 0.20;\n\n    // Scale\n    var currentScale = zoom.scale();\n    var newScale;\n    if(elmTarget.hasClass('control-zoom-in')) {\n      newScale = currentScale * (1 + scaleProcentile);\n    } else {\n      newScale = currentScale * (1 - scaleProcentile);\n    }\n    newScale = Math.max(newScale, 0);\n\n    // Translate\n    var centerTranslate = [\n      (graphWidth / 2) - (graphWidth * newScale / 2),\n      (graphHeight / 2) - (graphHeight * newScale / 2)\n    ];\n\n    // Store values\n    zoom\n      .translate(centerTranslate)\n      .scale(newScale);\n\n    // Render transition\n    graph.transition()\n      .duration(500)\n      .attr(\"transform\", \"translate(\" + zoom.translate() + \")\" + \" scale(\" + zoom.scale() + \")\");\n\n  }\n\n  function onZoomChanged() {\n    graph.attr(\"transform\", \"translate(\" + d3.event.translate + \")\" + \" scale(\" + d3.event.scale + \")\");\n  }\n    \n  function persistNodes(nodes) {\n    var store = nodes.filter(function(n){ return n.fixed }).reduce(function(mem,n){\n      mem[n.id]=n;\n      return mem;\n    },{});\n    store = JSON.stringify(store);\n    window.localStorage.setItem(\"dependo\"+window.graphIdentification, store);\n  }\n\n  function getNodes() {\n    try {\n      if(window.nodePositions){\n        return JSON.parse(window.nodePositions);\n      }else{\n        return JSON.parse(window.localStorage.getItem(\"dependo\"+window.graphIdentification)) || {};\n      }\n    } catch (e) {\n      return {};\n    }\n  }\n  \n  \n  function onNodeMouseDown(d) {\n     d.fixed = true;\n     d3.select(this).classed(\"sticky\", true);\n     debouncedPersist();\n  }\n    \n  var persistTimer;\n  function debouncedPersist() {\n    clearTimeout(persistTimer);\n    persistTimer = setTimeout(function(){\n      persistNodes(data.nodes)\n    },1000);\n  }\n\n  render();\n\n})();\n"}